{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CameraComponent = function CameraComponent() {\n  var videoRef = useRef(null);\n  var canvasRef = useRef(null);\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    error = _useState2[0],\n    setError = _useState2[1];\n  var handleCameraAccess = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var stream = yield navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (err) {\n        setError(\"Camera access denied or not available.\");\n        console.error(\"Error accessing the camera:\", err);\n      }\n    });\n    return function handleCameraAccess() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleTakePicture = function handleTakePicture() {\n    if (!videoRef.current) return;\n    var video = videoRef.current;\n    var canvas = canvasRef.current;\n    var width = video.videoWidth;\n    var height = video.videoHeight;\n    canvas.width = width;\n    canvas.height = height;\n    var ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(video, 0, 0, width, height);\n    var dataURL = canvas.toDataURL(\"image/png\");\n    console.log(\"Captured image data URL:\", dataURL);\n  };\n  return _jsx(\"div\", {\n    children: error ? _jsx(\"p\", {\n      children: error\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(\"video\", {\n        ref: videoRef,\n        autoPlay: true\n      }), _jsx(\"button\", {\n        onClick: handleCameraAccess,\n        children: \"Start Camera\"\n      }), _jsx(\"button\", {\n        onClick: handleTakePicture,\n        children: \"Take Picture\"\n      }), _jsx(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          display: \"none\"\n        }\n      })]\n    })\n  });\n};\nexport default CameraComponent;","map":{"version":3,"names":["React","useState","useRef","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","CameraComponent","videoRef","canvasRef","_useState","_useState2","_slicedToArray","error","setError","handleCameraAccess","_ref","_asyncToGenerator","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","err","console","apply","arguments","handleTakePicture","canvas","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","dataURL","toDataURL","log","children","ref","autoPlay","onClick","style","display"],"sources":["C:/Users/avani/Reactnative/CameraApp/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\n\nconst CameraComponent = () => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [error, setError] = useState(null);\n\n  const handleCameraAccess = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    } catch (err) {\n      setError(\"Camera access denied or not available.\");\n      console.error(\"Error accessing the camera:\", err);\n    }\n  };\n\n  const handleTakePicture = () => {\n    if (!videoRef.current) return;\n\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n\n    const width = video.videoWidth;\n    const height = video.videoHeight;\n\n    canvas.width = width;\n    canvas.height = height;\n\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(video, 0, 0, width, height);\n\n    // You can save the image by converting the canvas data to a data URL\n    const dataURL = canvas.toDataURL(\"image/png\");\n\n    // For this example, we'll log the dataURL in the console\n    console.log(\"Captured image data URL:\", dataURL);\n\n    // In a real application, you can send the dataURL to the server\n    // using APIs to save the image on the server or perform further processing.\n\n    // Note: The dataURL will be a Base64-encoded string representation of the image.\n    // You can also convert it to a Blob and use the FormData API to send it to the server.\n  };\n\n  return (\n    <div>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        <>\n          <video ref={videoRef} autoPlay />\n          <button onClick={handleCameraAccess}>Start Camera</button>\n          <button onClick={handleTakePicture}>Take Picture</button>\n          <canvas ref={canvasRef} style={{ display: \"none\" }} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CameraComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhD,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAC5B,IAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC7B,IAAMS,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC9B,IAAAU,SAAA,GAA0BX,QAAQ,CAAC,IAAI,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAEtB,IAAMI,kBAAkB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACrC,IAAI;QACF,IAAMC,MAAM,SAASC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;QACzE,IAAId,QAAQ,CAACe,OAAO,EAAE;UACpBf,QAAQ,CAACe,OAAO,CAACC,SAAS,GAAGN,MAAM;QACrC;MACF,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZX,QAAQ,CAAC,wCAAwC,CAAC;QAClDY,OAAO,CAACb,KAAK,CAAC,6BAA6B,EAAEY,GAAG,CAAC;MACnD;IACF,CAAC;IAAA,gBAVKV,kBAAkBA,CAAA;MAAA,OAAAC,IAAA,CAAAW,KAAA,OAAAC,SAAA;IAAA;EAAA,GAUvB;EAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC9B,IAAI,CAACrB,QAAQ,CAACe,OAAO,EAAE;IAEvB,IAAMD,KAAK,GAAGd,QAAQ,CAACe,OAAO;IAC9B,IAAMO,MAAM,GAAGrB,SAAS,CAACc,OAAO;IAEhC,IAAMQ,KAAK,GAAGT,KAAK,CAACU,UAAU;IAC9B,IAAMC,MAAM,GAAGX,KAAK,CAACY,WAAW;IAEhCJ,MAAM,CAACC,KAAK,GAAGA,KAAK;IACpBD,MAAM,CAACG,MAAM,GAAGA,MAAM;IAEtB,IAAME,GAAG,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;IACnCD,GAAG,CAACE,SAAS,CAACf,KAAK,EAAE,CAAC,EAAE,CAAC,EAAES,KAAK,EAAEE,MAAM,CAAC;IAGzC,IAAMK,OAAO,GAAGR,MAAM,CAACS,SAAS,CAAC,WAAW,CAAC;IAG7Cb,OAAO,CAACc,GAAG,CAAC,0BAA0B,EAAEF,OAAO,CAAC;EAOlD,CAAC;EAED,OACEpC,IAAA;IAAAuC,QAAA,EACG5B,KAAK,GACJX,IAAA;MAAAuC,QAAA,EAAI5B;IAAK,CAAI,CAAC,GAEdP,KAAA,CAAAF,SAAA;MAAAqC,QAAA,GACEvC,IAAA;QAAOwC,GAAG,EAAElC,QAAS;QAACmC,QAAQ;MAAA,CAAE,CAAC,EACjCzC,IAAA;QAAQ0C,OAAO,EAAE7B,kBAAmB;QAAA0B,QAAA,EAAC;MAAY,CAAQ,CAAC,EAC1DvC,IAAA;QAAQ0C,OAAO,EAAEf,iBAAkB;QAAAY,QAAA,EAAC;MAAY,CAAQ,CAAC,EACzDvC,IAAA;QAAQwC,GAAG,EAAEjC,SAAU;QAACoC,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAO;MAAE,CAAE,CAAC;IAAA,CACtD;EACH,CACE,CAAC;AAEV,CAAC;AAED,eAAevC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}